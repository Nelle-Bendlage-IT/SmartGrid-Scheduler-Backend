// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.4
// source: local_price_prediction.proto

package local_price_prediction

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLocalPricePredictionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zipcode uint32 `protobuf:"varint,1,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
}

func (x *GetLocalPricePredictionsRequest) Reset() {
	*x = GetLocalPricePredictionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_local_price_prediction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocalPricePredictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocalPricePredictionsRequest) ProtoMessage() {}

func (x *GetLocalPricePredictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_local_price_prediction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocalPricePredictionsRequest.ProtoReflect.Descriptor instead.
func (*GetLocalPricePredictionsRequest) Descriptor() ([]byte, []int) {
	return file_local_price_prediction_proto_rawDescGZIP(), []int{0}
}

func (x *GetLocalPricePredictionsRequest) GetZipcode() uint32 {
	if x != nil {
		return x.Zipcode
	}
	return 0
}

type LocalPricePredictionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalPricePredictions []*LocalPricePrediction `protobuf:"bytes,1,rep,name=local_price_predictions,json=localPricePredictions,proto3" json:"local_price_predictions,omitempty"`
}

func (x *LocalPricePredictionResponse) Reset() {
	*x = LocalPricePredictionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_local_price_prediction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalPricePredictionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalPricePredictionResponse) ProtoMessage() {}

func (x *LocalPricePredictionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_local_price_prediction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalPricePredictionResponse.ProtoReflect.Descriptor instead.
func (*LocalPricePredictionResponse) Descriptor() ([]byte, []int) {
	return file_local_price_prediction_proto_rawDescGZIP(), []int{1}
}

func (x *LocalPricePredictionResponse) GetLocalPricePredictions() []*LocalPricePrediction {
	if x != nil {
		return x.LocalPricePredictions
	}
	return nil
}

type LocalPricePrediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	ZipCode        uint32                 `protobuf:"varint,2,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	EndTimestamp   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	MarketPrice    float32                `protobuf:"fixed32,4,opt,name=market_price,json=marketPrice,proto3" json:"market_price,omitempty"`
	LocalPrice     float32                `protobuf:"fixed32,5,opt,name=local_price,json=localPrice,proto3" json:"local_price,omitempty"`
}

func (x *LocalPricePrediction) Reset() {
	*x = LocalPricePrediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_local_price_prediction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalPricePrediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalPricePrediction) ProtoMessage() {}

func (x *LocalPricePrediction) ProtoReflect() protoreflect.Message {
	mi := &file_local_price_prediction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalPricePrediction.ProtoReflect.Descriptor instead.
func (*LocalPricePrediction) Descriptor() ([]byte, []int) {
	return file_local_price_prediction_proto_rawDescGZIP(), []int{2}
}

func (x *LocalPricePrediction) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *LocalPricePrediction) GetZipCode() uint32 {
	if x != nil {
		return x.ZipCode
	}
	return 0
}

func (x *LocalPricePrediction) GetEndTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTimestamp
	}
	return nil
}

func (x *LocalPricePrediction) GetMarketPrice() float32 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *LocalPricePrediction) GetLocalPrice() float32 {
	if x != nil {
		return x.LocalPrice
	}
	return 0
}

var File_local_price_prediction_proto protoreflect.FileDescriptor

var file_local_price_prediction_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69,
	0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x7a, 0x69, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x1c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfb, 0x01, 0x0a, 0x14,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x7a, 0x69, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x32, 0xa9, 0x01, 0x0a, 0x1b, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61, 0x5a, 0x5f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x65, 0x6c, 0x6c, 0x65, 0x2d, 0x42, 0x65, 0x6e, 0x64, 0x6c, 0x61,
	0x67, 0x65, 0x2d, 0x49, 0x54, 0x2f, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x47, 0x72, 0x69, 0x64, 0x2d,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2d, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_local_price_prediction_proto_rawDescOnce sync.Once
	file_local_price_prediction_proto_rawDescData = file_local_price_prediction_proto_rawDesc
)

func file_local_price_prediction_proto_rawDescGZIP() []byte {
	file_local_price_prediction_proto_rawDescOnce.Do(func() {
		file_local_price_prediction_proto_rawDescData = protoimpl.X.CompressGZIP(file_local_price_prediction_proto_rawDescData)
	})
	return file_local_price_prediction_proto_rawDescData
}

var file_local_price_prediction_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_local_price_prediction_proto_goTypes = []interface{}{
	(*GetLocalPricePredictionsRequest)(nil), // 0: local_price_prediction.GetLocalPricePredictionsRequest
	(*LocalPricePredictionResponse)(nil),    // 1: local_price_prediction.LocalPricePredictionResponse
	(*LocalPricePrediction)(nil),            // 2: local_price_prediction.LocalPricePrediction
	(*timestamppb.Timestamp)(nil),           // 3: google.protobuf.Timestamp
}
var file_local_price_prediction_proto_depIdxs = []int32{
	2, // 0: local_price_prediction.LocalPricePredictionResponse.local_price_predictions:type_name -> local_price_prediction.LocalPricePrediction
	3, // 1: local_price_prediction.LocalPricePrediction.start_timestamp:type_name -> google.protobuf.Timestamp
	3, // 2: local_price_prediction.LocalPricePrediction.end_timestamp:type_name -> google.protobuf.Timestamp
	0, // 3: local_price_prediction.LocalPricePredictionService.GetLocalPricePredictions:input_type -> local_price_prediction.GetLocalPricePredictionsRequest
	1, // 4: local_price_prediction.LocalPricePredictionService.GetLocalPricePredictions:output_type -> local_price_prediction.LocalPricePredictionResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_local_price_prediction_proto_init() }
func file_local_price_prediction_proto_init() {
	if File_local_price_prediction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_local_price_prediction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocalPricePredictionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_local_price_prediction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalPricePredictionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_local_price_prediction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalPricePrediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_local_price_prediction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_local_price_prediction_proto_goTypes,
		DependencyIndexes: file_local_price_prediction_proto_depIdxs,
		MessageInfos:      file_local_price_prediction_proto_msgTypes,
	}.Build()
	File_local_price_prediction_proto = out.File
	file_local_price_prediction_proto_rawDesc = nil
	file_local_price_prediction_proto_goTypes = nil
	file_local_price_prediction_proto_depIdxs = nil
}
